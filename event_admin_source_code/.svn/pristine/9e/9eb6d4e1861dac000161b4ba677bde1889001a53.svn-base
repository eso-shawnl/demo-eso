<?php
class ControllerLocalisationPage extends Controller {
	private $error = array ();
	public function index() {
		$this->load->language ( 'localisation/page' );
		
		$this->document->setTitle ( $this->language->get ( 'heading_title' ) );
		
		$this->load->model ( 'localisation/page' );
		
		$this->getList ();
	}
	
	public function add() {
		
		 $this->load->language('localisation/page');
		
		 $this->document->setTitle($this->language->get('heading_title'));
		 
		 $this->load->model('localisation/page');

		 $data['result']= array();
		 
		 if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {
		 	 $data['result']=array();
			 $data['result']['add']=$this->model_localisation_page->addPage($this->request->post);
		 
			 $this->session->data['success'] = $this->language->get('text_success');
		 
			 $url = '';
			 
			 if (isset($this->request->get['sort'])) {
			 $url .= '&sort=' . $this->request->get['sort'];
			 }
			 
			 if (isset($this->request->get['order'])) {
			 $url .= '&order=' . $this->request->get['order'];
			 }
			 
			 if (isset($this->request->get['page'])) {
			 $url .= '&page=' . $this->request->get['page'];
			 }
			 
			 //$this->response->redirect($this->url->link('localisation/page', 'token=' . $this->session->data['token'] . $url, 'SSL'));
		 }
		 
		 $this->getForm($data['result']);
		 
	}
	
	public function edit() {
		$this->load->language ( 'localisation/page' );
		
		$this->document->setTitle ( $this->language->get ( 'heading_title' ) );
		
		$this->load->model ( 'localisation/page' );

		$data['result']= array();
			
		if (($this->request->server ['REQUEST_METHOD'] == 'POST') && $this->validateForm ()) {
			
			/* get result of update and check is there any error, keep in this page
			 */
			//print_r($this->request->post);
			$data['result']['update']=$this->model_localisation_page->editPage($this->request->post);
			$data['result']['add']=$this->model_localisation_page->addPage($this->request->post);
	
			$this->session->data['success'] = $this->language->get('text_success');
			
			$url = '';
				
			if (isset ( $this->request->get ['sort'] )) {
				$url .= '&sort=' . $this->request->get ['sort'];
			}
				
			if (isset ( $this->request->get ['order'] )) {
				$url .= '&order=' . $this->request->get ['order'];
			}
				
			if (isset ( $this->request->get ['page'] )) {
				$url .= '&page=' . $this->request->get ['page'];
			}
				
			//$this->response->redirect ( $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . $url, 'SSL' ) );
		
		}
		
		$this->getForm ($data['result']);
	}
	
	public function delete() {
		
		$this->load->language('localisation/page');
		
		$this->document->setTitle($this->language->get('heading_title'));
		
		$this->load->model('localisation/page');
		
		if (isset($this->request->post['selected']) && $this->validateDelete()) {
			foreach ($this->request->post['selected'] as $page_id) {
				$this->model_localisation_page->deletePage($page_id);
		}
		
		$this->session->data['success'] = $this->language->get('text_success');
		
		$url = '';
		
		if (isset($this->request->get['filter_name'])) {
			 $url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}
		
		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}
		
		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}
		
		$this->response->redirect($this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL'));
		}
		
		$this->getList();
		
	}
	protected function getList() {

		if (isset ( $this->request->get ['filter_name'] )) {
			$filter_name = $this->request->get ['filter_name'];
		} else {
			$filter_name = null;
		}
		
		if (isset ( $this->request->get ['sort'] )) {
			$sort = $this->request->get ['sort'];
		} else {
			$sort = 'name';
		}
		
		if (isset ( $this->request->get ['order'] )) {
			$order = $this->request->get ['order'];
		} else {
			$order = 'ASC';
		}
		
		if (isset ( $this->request->get ['page'] )) {
			$page = $this->request->get ['page'];
		} else {
			$page = 1;
		}
		
		$url = '';
		
		if (isset ( $this->request->get ['filter_name'] )) {
			$url .= '&filter_name=' . urlencode ( html_entity_decode ( $this->request->get ['filter_name'], ENT_QUOTES, 'UTF-8' ) );
		}
		
		if (isset ( $this->request->get ['sort'] )) {
			$url .= '&sort=' . $this->request->get ['sort'];
		}
		
		if (isset ( $this->request->get ['order'] )) {
			$url .= '&order=' . $this->request->get ['order'];
		}
		
		if (isset ( $this->request->get ['page'] )) {
			$url .= '&page=' . $this->request->get ['page'];
		}
		
		$data ['breadcrumbs'] = array ();
		
		$data ['breadcrumbs'] [] = array (
				'text' => $this->language->get ( 'text_home' ),
				'href' => $this->url->link ( 'common/dashboard', 'token=' . $this->session->data ['token'], 'SSL' ) 
		);
		
		$data ['breadcrumbs'] [] = array (
				'text' => $this->language->get ( 'heading_title' ),
				'href' => $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . $url, 'SSL' ) 
		);
		
		$data ['add'] = $this->url->link ( 'localisation/page/add', 'token=' . $this->session->data ['token'] . $url, 'SSL' );
		$data ['delete'] = $this->url->link ( 'localisation/page/delete', 'token=' . $this->session->data ['token'] . $url, 'SSL' );
		
		$data ['pages'] = array ();
		
		$filter_data = array (
				'filter_name' => $filter_name,
				'sort' => $sort,
				'order' => $order,
				'start' => ($page - 1) * $this->config->get ( 'config_limit_admin' ),
				'limit' => $this->config->get ( 'config_limit_admin' ) 
		);
		
		$total = $this->model_localisation_page->getTotalPages ( $filter_data );
		
		$results = $this->model_localisation_page->getPages ( $filter_data );
		
		foreach ( $results as $result ) {
			
			$data ['pages'] [] = array (
					'page_id' => $result ['page_id'],
					'name' => $result ['name'],
					'edit' => $this->url->link ( 'localisation/page/edit', 'token=' . $this->session->data ['token'] . '&page_id=' . $result ['page_id'] . $url, 'SSL' ) 
			);
		}
		
		$data ['heading_title'] = $this->language->get ( 'heading_title' );
		
		$data ['text_list'] = $this->language->get ( 'text_list' );
		$data ['text_enabled'] = $this->language->get ( 'text_enabled' );
		$data ['text_disabled'] = $this->language->get ( 'text_disabled' );
		$data ['text_no_results'] = $this->language->get ( 'text_no_results' );
		$data ['text_confirm'] = $this->language->get ( 'text_confirm' );
		$data ['text_no_results'] = $this->language->get('text_no_results');
		
		$data ['column_name'] = $this->language->get ( 'column_name' );
		$data ['column_action'] = $this->language->get ( 'column_action' );
		
		$data ['entry_name'] = $this->language->get ( 'entry_name' );
		
		$data ['button_add'] = $this->language->get ( 'button_add' );
		$data ['button_edit'] = $this->language->get ( 'button_edit' );
		$data ['button_delete'] = $this->language->get ( 'button_delete' );
		$data ['button_filter'] = $this->language->get ( 'button_filter' );
		
		$data ['button_upload'] = $this->language->get ( 'button_upload' );
		$data ['button_clear'] = $this->language->get ( 'button_clear' );
		
		$data ['token'] = $this->session->data ['token'];
		
		if (isset ( $this->error ['warning'] )) {
			$data ['error_warning'] = $this->error ['warning'];
		} else {
			$data ['error_warning'] = '';
		}
		
		if (isset ( $this->session->data ['success'] )) {
			$data ['success'] = $this->session->data ['success'];
			
			unset ( $this->session->data ['success'] );
		} else {
			$data ['success'] = '';
		}
		
		if (isset ( $this->request->post ['selected'] )) {
			$data ['selected'] = ( array ) $this->request->post ['selected'];
		} else {
			$data ['selected'] = array ();
		}
		
		$url = '';
		
		if (isset ( $this->request->get ['filter_name'] )) {
			$url .= '&filter_name=' . urlencode ( html_entity_decode ( $this->request->get ['filter_name'], ENT_QUOTES, 'UTF-8' ) );
		}
		
		if ($order == 'ASC') {
			$url .= '&order=DESC';
		} else {
			$url .= '&order=ASC';
		}
		
		if (isset ( $this->request->get ['page'] )) {
			$url .= '&page=' . $this->request->get ['page'];
		}
		
		$data ['sort_name'] = $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . '&sort=name' . $url, 'SSL' );
		$data ['sort_order'] = $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . '&sort=p.sort_order' . $url, 'SSL' );
		
		$url = '';
		
		if (isset ( $this->request->get ['filter_name'] )) {
			$url .= '&filter_name=' . urlencode ( html_entity_decode ( $this->request->get ['filter_name'], ENT_QUOTES, 'UTF-8' ) );
		}
		
		if (isset ( $this->request->get ['sort'] )) {
			$url .= '&sort=' . $this->request->get ['sort'];
		}
		
		if (isset ( $this->request->get ['order'] )) {
			$url .= '&order=' . $this->request->get ['order'];
		}
		
		$pagination = new Pagination ();
		$pagination->total = $total;
		$pagination->page = $page;
		$pagination->limit = $this->config->get ( 'config_limit_admin' );
		$pagination->url = $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . $url . '&page={page}', 'SSL' );
		
		$data ['pagination'] = $pagination->render ();
		
		$data ['results'] = sprintf ( $this->language->get ( 'text_pagination' ), ($total) ? (($page - 1) * $this->config->get ( 'config_limit_admin' )) + 1 : 0, ((($page - 1) * $this->config->get ( 'config_limit_admin' )) > ($total - $this->config->get ( 'config_limit_admin' ))) ? $total : ((($page - 1) * $this->config->get ( 'config_limit_admin' )) + $this->config->get ( 'config_limit_admin' )), $total, ceil ( $total / $this->config->get ( 'config_limit_admin' ) ) );
		
		$data ['filter_name'] = $filter_name;
		
		$data ['sort'] = $sort;
		$data ['order'] = $order;
		
		$data ['header'] = $this->load->controller ( 'common/header' );
		$data ['column_left'] = $this->load->controller ( 'common/column_left' );
		$data ['footer'] = $this->load->controller ( 'common/footer' );
		
		$this->response->setOutput ( $this->load->view ( 'localisation/page_list.tpl', $data ) );
	}
	
	protected function getForm($result) {
		
		$data ['heading_title'] = $this->language->get ( 'heading_title' );
		
		$data ['text_form'] = ! isset ( $this->request->get ['page_id'] ) ? $this->language->get ( 'text_add' ) : $this->language->get ( 'text_edit' );
		$data ['text_none'] = $this->language->get ( 'text_none' );
		$data ['text_default'] = $this->language->get ( 'text_default' );
		$data ['text_enabled'] = $this->language->get ( 'text_enabled' );
		$data ['text_disabled'] = $this->language->get ( 'text_disabled' );
		$data ['text_no_results'] = $this->language->get('text_no_results');
		
		$data ['entry_attribute'] = $this->language->get('entry_attribute');
		$data ['entry_text'] = $this->language->get('entry_text');
		$data ['entry_id'] = $this->language->get('entry_id');
		$data ['entry_name'] = $this->language->get('entry_name');
		
		$data ['column_name'] = $this->language->get ( 'column_name' );
		$data ['column_value'] = $this->language->get ( 'column_value' );
		
		$data ['button_edit'] = $this->language->get ( 'button_edit' );
		$data ['button_revert'] = $this->language->get ( 'button_revert' );
		$data ['button_delete'] = $this->language->get ( 'button_delete' );
		$data ['button_save'] = $this->language->get ( 'button_save' );
		$data ['button_cancel'] = $this->language->get ( 'button_cancel' );
		$data ['button_upload'] = $this->language->get ( 'button_upload' );
		$data ['button_clear'] = $this->language->get ( 'button_clear' );
		$data ['button_attribute_add'] = $this->language->get('button_attribute_add');
		$data ['button_remove'] = $this->language->get ( 'button_remove' );
		$data ['entry_upload'] = $this->language->get ( 'entry_upload' );
		
		$data ['tab_general'] = $this->language->get ( 'tab_general' );
		$data ['tab_attribute_list'] = $this->language->get ( 'tab_attribute_list' );
		$data ['tab_attribute_add'] = $this->language->get('tab_attribute_add');
		$data ['tab_data_load'] = $this->language->get ( 'tab_data_load' );
		
		$data ['result']=$result;
		
		$data['text_loading'] = $this->language->get('text_loading');
		
		if (isset ( $this->error ['warning'] )) {
			$data ['error_warning'] = $this->error ['warning'];
		} else {
			$data ['error_warning'] = '';
		}
		
		if (isset ( $this->error ['name'] )) {
			$data ['error_name'] = $this->error ['name'];
		} else {
			$data ['error_name'] = array ();
		}
		
		if (isset ( $this->request->post ['selected'] )) {
			$data ['selected'] = ( array ) $this->request->post ['selected'];
		} else {
			$data ['selected'] = array ();
		}
		
		if (isset ( $this->request->get ['sort'] )) {
			$sort = $this->request->get ['sort'];
		} else {
			$sort = 'name';
		}
		
		if (isset ( $this->request->get ['order'] )) {
			$order = $this->request->get ['order'];
		} else {
			$order = 'ASC';
		}
		
		if (isset ( $this->request->get ['page'] )) {
			$page = $this->request->get ['page'];
		} else {
			$page = 1;
		}
		
		$url = '';
		
		if (isset ( $this->request->get ['sort'] )) {
			$url .= '&sort=' . $this->request->get ['sort'];
		}
		
		if (isset ( $this->request->get ['order'] )) {
			$url .= '&order=' . $this->request->get ['order'];
		}
		
		if (isset ( $this->request->get ['page'] )) {
			$url .= '&page=' . $this->request->get ['page'];
		}
		
		$data ['breadcrumbs'] = array ();
		
		$data ['breadcrumbs'] [] = array (
				'text' => $this->language->get ( 'text_home' ),
				'href' => $this->url->link ( 'common/dashboard', 'token=' . $this->session->data ['token'], 'SSL' ) 
		);
		
		$data ['breadcrumbs'] [] = array (
				'text' => $this->language->get ( 'heading_title' ),
				'href' => $this->url->link ( 'localisatoin/page', 'token=' . $this->session->data ['token'] . $url, 'SSL' ) 
		);
		
		
		if (!isset($this->request->get['page_id'])) {
		 	$data['action'] = $this->url->link('localisation/page/add', 'token=' . $this->session->data['token'] . $url, 'SSL');
		} else {
			$data['action'] = $this->url->link('localisation/page/edit', 'token=' . $this->session->data['token'] . '&page_id=' . $this->request->get['page_id'] . $url, 'SSL');
		}
		 
		$data ['cancel'] = $this->url->link ( 'localisation/page', 'token=' . $this->session->data ['token'] . $url, 'SSL' );
		
		$data ['token'] = $this->session->data ['token'];
		
		$this->load->model ( 'localisation/language' );
		$this->load->model ( 'localisation/caption' );
		
		$data ['languages'] = $this->model_localisation_language->getLanguages ();
		
		$data ['page_captions'] = array ();
		if(isset($this->request->get['page_id']) && !empty($this->request->get['page_id']) ){
			$results = $this->model_localisation_page->getPage ((int)$this->request->get['page_id'] );
			
			$data ['page_id']=$results['page_id'];
			$data ['page_name']=$results['name'];
			
			foreach ( $data ['languages'] as $language ) {
				$data ['page_captions'] [$language ['language_id']] = $this->model_localisation_caption->getCaptionByPageIDAndLangID ( ( int ) $this->request->get ['page_id'], ( int ) $language ['language_id'] );
			}
		}
		else{
			$data ['page_id']=null;
			$data ['page_name']=null;
		}
		
		$pages = $this->model_localisation_page->getPagesList ();
		
		$data['select_pages']=array();
		foreach (getFileList() as $filename){
			$found=false;
			foreach ( $pages as $page ) {
				if($page ['name']==$filename.'.php'){
					$found=true;
					break;
				}		
			}
			if(!$found){
				$data['select_pages'][]=$filename.'.php';
			}
		}
			
		
		$this->load->model ( 'design/layout' );
		
		$data ['layouts'] = $this->model_design_layout->getLayouts ();
		
		$data ['header'] = $this->load->controller ( 'common/header' );
		$data ['column_left'] = $this->load->controller ( 'common/column_left' );
		$data ['footer'] = $this->load->controller ( 'common/footer' );
		
		$this->response->setOutput ( $this->load->view ( 'localisation/page_form.tpl', $data ) );
	}
	
	protected function validateForm() {
		if (! $this->user->hasPermission ( 'modify', 'localisation/page' )) {
			$this->error ['warning'] = $this->language->get ( 'error_permission' );
		}
		
		if ($this->error && ! isset ( $this->error ['warning'] )) {
			$this->error ['warning'] = $this->language->get ( 'error_warning' );
		}
		
		return ! $this->error;
	}
	
	protected function validateDelete() {
		if (! $this->user->hasPermission ( 'modify', 'localisation/page' )) {
			$this->error ['warning'] = $this->language->get ( 'error_permission' );
		}
		
		return ! $this->error;
	}
	
	protected function validateCopy() {
		if (! $this->user->hasPermission ( 'modify', 'localisation/page' )) {
			$this->error ['warning'] = $this->language->get ( 'error_permission' );
		}
		
		return ! $this->error;
	}
	
	public function autocomplete() {
		$json = array ();
		
		if (isset ( $this->request->get ['filter_name'] )) {
			$this->load->model ( 'localisation/page' );
			if (isset ( $this->request->get ['filter_name'] )) {
				$filter_name = $this->request->get ['filter_name'];
			} else {
				$filter_name = '';
			}

			//if (isset($this->request->get['limit'])) {
		//		$limit = $this->request->get['limit'];
		//	} else {
				$limit = 20;
		//	}

			$filter_data = array(
				'filter_name'  => $filter_name,
				'start'        => 0,
				'limit'        => $limit
			);

			$results = $this->model_localisation_page->getPages($filter_data);

			foreach ($results as $result) {
				$json[] = array(
					'page_id' => $result['page_id'],
					'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8'))
				);
			}
		}

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
		
	}

	public function autocomplete_caption() {
		$json = array ();
	
		if (isset ( $this->request->get ['filter_name'] )) {
			$this->load->model ( 'localisation/caption' );
			if (isset ( $this->request->get ['filter_name'] )) {
				$filter_name = $this->request->get ['filter_name'];
			} else {
				$filter_name = '';
			}
	
			$limit = 200;
	
			$filter_name = array(
					'filter_name'  => $filter_name,
					'start'        => 0,
					'limit'        => $limit
			);
	
			$results = $this->model_localisation_caption->getCaptions($filter_name);
	
			foreach ($results as $result) {
				$json[] = array(
						'caption_id' => $result['caption_id'],
						'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8'))
				);
			}
		}
	
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	
	}
	
	public function autocomplete_allcaptions() {
		$json = array ();
	
		if (isset ( $this->request->get ['filter_name'] )) {
			$this->load->model ( 'localisation/caption' );
			if (isset ( $this->request->get ['filter_name'] )) {
				$filter_name = $this->request->get ['filter_name'];
			} else {
				$filter_name = '';
			}
	
			$results = $this->model_localisation_caption->getCaptionByPageID($filter_name);
	
			foreach ($results as $result) {
				$json[] = array(
						'caption_id' => $result['id'],
						'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8'))
				);
			}
		}
	
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	
	}
	
	public function upload() {
		$_ = array();
		$this->load->language('localisation/page');
	
		$json = array();
		$path = 'temp-' . md5(mt_rand());
	
		if (!$json) {
			if (strrchr($this->request->files['file']['name'], '.') == '.php') {
				$file = DIR_UPLOAD . $path . '/language.php';
			
		
				if (!is_dir(DIR_UPLOAD . $path)) {
					mkdir(DIR_UPLOAD . $path, 0777);
				}
				move_uploaded_file ( $this->request->files ['file'] ['tmp_name'], $file );
				
				if (file_exists ( $file )) {
					require ($file);
				}
				
			}
			
		}
	
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
}